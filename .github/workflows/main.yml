name: Build and Release

on:
  workflow_dispatch:

jobs:
  generate_version:
    name: Generate Version
    runs-on: ubuntu-latest
    outputs:
      generated_version: ${{ steps.set_version.outputs.generated_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate version
        id: set_version
        run: |
          RELEASE_TYPE="${{ github.event.inputs.release_type || 'patch' }}"
          CUSTOM_VERSION="${{ github.event.inputs.custom_version || '' }}"

          if [[ -z "$CUSTOM_VERSION" ]]; then
            LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) || echo "0.0.0")
            echo "Latest GitHub tag: $LATEST_TAG"
          
            MAJOR=$(echo "$LATEST_TAG" | cut -d. -f1 | sed 's/v//')
            MINOR=$(echo "$LATEST_TAG" | cut -d. -f2)
            PATCH=$(echo "$LATEST_TAG" | cut -d. -f3 | cut -d'-' -f1)
          
            case "$RELEASE_TYPE" in
              major) MAJOR=$((MAJOR + 1)); MINOR=0; PATCH=0 ;;
              minor) MINOR=$((MINOR + 1)); PATCH=0 ;;
              patch) PATCH=$((PATCH + 1)) ;;
            esac
          
            NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          else
            NEW_VERSION="$CUSTOM_VERSION"
          fi
          
          echo "generated_version=$NEW_VERSION" >> "$GITHUB_ENV"
          echo "generated_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"
          echo "Final version: $NEW_VERSION"

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: generate_version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'openjdk'

      - name: Build with Maven
        run: |
          mvn clean package 

  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create a new Git tag
        run: |
          VERSION=${{ needs.generate_version.outputs.generated_version }}
          git tag "v$VERSION"
          git push origin "v$VERSION"

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_to_github_packages:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Publish JAR to GitHub Packages
        run: |
          VERSION=${{ needs.generate_version.outputs.generated_version }}
          mvn deploy:deploy-file -Dfile=target/my-app-${VERSION}.jar -DrepoUrl=https://maven.pkg.github.com/OWNER/REPOSITORY -DgroupId=com.example -DartifactId=my-app -Dversion=$VERSION -Dpackaging=jar -Durl=https://maven.pkg.github.com/OWNER/REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
